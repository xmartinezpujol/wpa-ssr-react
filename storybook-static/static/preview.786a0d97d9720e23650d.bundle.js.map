{"version":3,"file":"static/preview.786a0d97d9720e23650d.bundle.js","sources":["webpack:///./src/components/Button.js"],"sourcesContent":["import React from 'react';\nimport glamorous from 'glamorous';\n\nimport { COLOR_PALETTE } from '../Constants';\n\nconst shape = {\n  round: '200px',\n  square: 0,\n  default: 6,\n};\n\nconst size = {\n  small: {\n    fontSize: 14,\n    minHeight: 30,\n  },\n  medium: {\n    fontSize: 18,\n    minHeight: 54,\n  },\n  large: {\n    fontSize: 22,\n    minHeight: 60,\n  },\n};\n\nconst template = (props) => {\n  const templateRemake = {\n    default: {\n      background: props.type ? COLOR_PALETTE[props.type] : COLOR_PALETTE.business,\n      border: 0,\n      color: 'white',\n    },\n    login: {\n      background: COLOR_PALETTE.grad_social,\n      border: 0,\n      color: 'white',\n    },\n    outlined: {\n      backgroundColor: 'white',\n      border: '2px solid',\n      borderColor: COLOR_PALETTE[props.bordercolor],\n      color: props.bordercolor ? COLOR_PALETTE[props.bordercolor] : COLOR_PALETTE.black,\n      ':hover:enabled': {\n        background: (props.bordercolor === 'black' || !props.bordercolor) ?\n          COLOR_PALETTE.grad_neutral : 'white',\n        color: (props.bordercolor === 'black' || !props.bordercolor) ?\n          'white' : props.bordercolor,\n      },\n    },\n    link: {\n      backgroundColor: 'transparent',\n      border: 0,\n      color: props.bordercolor ? COLOR_PALETTE[props.bordercolor] : COLOR_PALETTE.black,\n      ':hover:enabled': {\n        boxShadow: 'none',\n        color: props.bordercolor ?\n          props.bordercolor === 'black' ? 'white' : props.bordercolor\n          : 'black',\n      },\n    },\n  };\n\n  const theme = templateRemake[props.template ? props.template : 'default'];\n  const templateMod = Object.assign(\n    {},\n    theme,\n  );\n\n  return templateMod;\n};\n\nconst Icon = glamorous.i(\n  {\n    display: 'flex',\n  },\n  props => ({\n    fontSize: props.iconSize ? props.iconSize : 22,\n    width: props.iconWidth ? props.iconWidth : 'auto',\n    fontWeight: props.iconBold ? '700 !important' : 300,\n  }),\n);\n\nconst ButtonBox = glamorous.button(\n  {\n    fontFamily: 'Lato, sans-serif',\n    margin: '0 10px',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    transition: '0.25s cubic-bezier(0.17, 0.67, 0.52, 0.97)',\n    padding: '0 22px',\n    WebkitTapHighlightColor: 'rgba(255, 255, 255, 0)',\n    ':hover:enabled': {\n      opacity: 0.8,\n      boxShadow: '0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08)',\n    },\n    ':focus': {\n      outline: 0,\n      opacity: 1,\n    },\n    ':disabled': {\n      opacity: 0.5,\n      cursor: 'not-allowed',\n    },\n  },\n  props => ({\n    ...template(props),\n    ...size[props.size ? props.size : 'medium'],\n    borderRadius: props.shape ? shape[props.shape] : shape.default,\n    fontWeight: props.bold ? 700 : 300,\n    minWidth: props.fullWidth ? '100%' : 'initial',\n    textTransform: props.uppercase ? 'uppercase' : 'initial',\n    transform: props.noanim ? 'none' : 'translateY(-1px)',\n    ':active:enabled': {\n      transform: props.noanim ? 'none' : 'translateY(1px)',\n    },\n  }),\n);\n\nconst Button = props => (\n  <ButtonBox {...props} >\n    {props.icon &&\n    <Icon\n      iconBold={props.iconBold}\n      iconSize={props.iconSize}\n      iconWidth={props.iconWidth}\n      className={`${props.iFont} ${props.iFont}-${props.icon}`}\n      aria-hidden=\"true\"\n    />\n    }\n    {props.children}\n  </ButtonBox>\n);\n\nexport default Button;\n\n"],"mappings":"AAAA","sourceRoot":""}